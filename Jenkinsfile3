pipeline{
    agent any
    // tagging builds with build id
    environment {
        VERSION = "${env.BUILD_ID}"
        imageName = "springbootapp"
        registryCredentials = "nexus"
        registry = "127.0.0.1:8086/"
        dockerImage = ''
    }
    tools {
        maven "maven3.9"
    }
    stages{
        stage ('Checkout'){
            steps{
                script{
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/colossus06/springboot-app-counter.git']])
                    sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                    ''' 
                }
            }
        }
        stage("build & SonarQube analysis") {
            steps {
                script{
                    withSonarQubeEnv(credentialsId: 'sonar-token') {
                    sh 'mvn clean package sonar:sonar'
              }
            }

            }
          }
        stage("Quality Gate Status"){
            steps{
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }

        // Uploading Docker images into Nexus Registry
        stage('Uploading to Nexus') {
        steps{
            script {
                docker.withRegistry( 'http://'+registry, registryCredentials ) {
                dockerImage.push(env.BUILD_ID)
                sh'''
                docker rmi ${imageName}:{BUILD_ID}
                '''
            }
            }
        }
        }
    }
}